https://blog.csdn.net/waveclouds/article/details/79535685


q1：mysql的复制原理以及流程（https://baijiahao.baidu.com/s?id=1617888740370098866&wfr=spider&for=pc）
a1：
基本原理流程，3个线程以及之间的关联
1.主服务器：bin（binary）log线程-记录下所有改变了数据库数据的语句，放进master的binlog中
2.从服务器：io线程-在使用start slave之后，负责从master上拉取binlog内容，放进自己的relay log中
3.从服务器：sql执行线程-执行relay log的语句

q2：mysql中myisam和innodb的区别，至少5点
a2：
五点不同：
1.InnoDB支持事务，MyISAM不支持事务
2.InnoDB支持行级锁，MyISAM支持表级锁
3.InnoDB支持MVCC（https://www.cnblogs.com/chenpingzhao/p/5065316.html），MyISAM不支持
4.InnoDB支持外键，MyISAM不支持
5.InnoDB不支持全文索引，而MyISAM支持

InnoDB引擎的4大特性：
插入缓冲（insert buffer）、二次写（double buffer），自适应哈希索引（adjective hash index）、预读（read ahead）

2者 select count（*）哪个更快，为什么
MyISAM更快，因为内部维护了一个计数器，可以直接调取，而InnoDB需要全文检索

q3：MySQL中varchar与char的区别，以及varchar（50）中50代表的含义
a3：
varchar与char的区别：char为固定长度的数据类型，varchar是可变长度的数据类型
50的含义：最多存放50个字符，varchar（50）和varchar（200）存储hello所占的空间一样，但是后者在排序时会消耗
较多的内存，因为order by col 采用fixed_length计算col长度（memory引擎也一样）
int（20）中20的含义：
是指显示字符的长度，但要加参数的，最大为255，当字符位数超过11，它也只显示11位。20表示最大
显示宽度为20，但是仍然占4个字节，存储范围并没有变化。
插入10笔资料，它就显示00000000001 ~~~00000000010，当字符的位数超过11,它也只显示11位，
如果你没有加那个让它未满11位就前面加0的参数，它不会在前面加0
为什么这么设计：
对大多数应用没有意义，只是规定一些工具用来显示字符的个数；int(1)和int(20)存储和计算均一样

q4：InnoDB的事务与日志的实现方式
多少种日志：
错误日志：记录出错信息，也记录一些警告信息和正确信息
查询日志：记录所有对数据库请求的信息，不论这些请求是否得到了正确执行。
慢查询日志：设置一个阈值，将运行时间超过该阈值的所有sql语句都记录在慢查询的日志中
二进制日志（binary log）：记录对数据库执行更改的所有操作，重点是更改
中继日志：
事务日志：

事务的4中隔离级别：
读未提交；读已递交；可重复读；串行

事务（https://www.cnblogs.com/cuisi/p/6549757.html）

事务是如何通过日志来实现的，说的越深入越好。（https://blog.csdn.net/jerry____wang/article/details/51734685）
事务日志是通过redo和innodb的存储引擎日志缓冲（Innodb log buffer）来实现的，当开始一个事务的时候，
会记录该事务的lsn(log sequence number)号; 当事务执行时，会往InnoDB存储引擎的日志
的日志缓存里面插入事务日志；当事务提交时，必须将存储引擎的日志缓冲写入磁盘（通过innodb_flush_log_at_trx_commit来控制），
也就是写数据前，需要先写日志。这种方式称为“预写日志方式”（writing-ahead logging）

q5：mysql binlog的几种日志录入格式以及区别
statement、row、mixedlevel

q6：MySQL数据库cpu飙升到500%怎么处理
a6：
列出所有进程 show processlist
观察所有进程 多秒没有状态变化的，干掉。
查看超时日志或者错误日志
一般会是查询以及大批量的插入会导致cpu与io上涨，
还有可能是网络状态中断，导致一个请求 服务器只接受了一般，where子句没有收到

q7：sql优化
a7：
索引优化（https://www.cnblogs.com/hephec/p/4557053.html）







